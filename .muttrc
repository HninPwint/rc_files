## ~/.muttrc
## (see: http://www.mutt.org/links.html#config)

## TODO

set mbox = "$HOME/Mail/incoming"
set postponed = "$HOME/Mail/postponed"
set record = "$HOME/Mail/sent-mail-mutt"
set save_name

## Check for new mail in folder every minute:
set timeout = 60

## Colours for a black background:
## overrides background image:
# color normal white black
## leaves background image visible:
color normal default default
color indicator brightwhite magenta
color hdrdefault brightblue default
color header brightcyan default "^From: "
color header brightcyan default "^To: "
color header brightgreen default "^Subject: "
color header yellow default "^Date: "
color header brightred default "^X-Spam"
color header magenta default "^List"
color body white default ".*"
color quoted yellow default
color status white blue
color tree green default

## Settings (see: /usr/share/doc/mutt/html/manual-6.html#variables)
set move = no
unset mark_old
set pager_stop
set pager_index_lines = 8
set folder_format = "%2C%N %-4.4u:%-4.4g  %d %8s  %f"
set index_format = "%S%T %[%d/%b] %-12.12L (%4l) %s"
set to_chars = "? +C@L"
## Headers to display:
ignore *
unignore from date subject to cc
unignore organization organisation x-mailer: x-newsreader: x-mailing-list:
unignore posted-to:
unignore x-spam-status:

## Commands to run when entering particular folders:
folder-hook . set sort=date-sent
folder-hook Lists set sort=threads
# folder-hook lists set sort=threads

macro index U <untag-pattern>

## Keybindings (see: /usr/share/doc/mutt/html/manual-6.html#functions)
# macro generic "c" <mail>
# macro generic "i" <view-file>
# macro generic "l" <change-folder>"?"
macro generic <left> <exit>
## Browser:
# macro browser <left> <exit><exit>
macro browser <left> "<Home><Enter>"
macro browser <right> <select-entry>
macro browser "Q" <exit><exit>
## Index and pager: (mutt bug: refreshes only half work in pager)
macro index "Q" <exit><exit>
macro pager "Q" <exit><exit>
macro index "c" <mail>
macro pager "c" <mail>
macro index "l" <change-folder>"?"
macro pager "l" <change-folder>"?"
# Sort by thread
macro index "\Ct" ":set sort=threads<Enter>"
macro pager "\Ct" ":set sort=threads<Enter><refresh>"
# macro index "\Ct" ot
# macro pager "\Ct" ot
# Sort by person
macro index "\Cp" ":set sort=from<Enter>"
macro pager "\Cp" ":set sort=from<Enter><refresh>"
# Sort by received date
macro index "\Cr" ":set sort=date-received<Enter>"
macro pager "\Cr" ":set sort=date-received<Enter><refresh>"
# Show name
macro index "\Cn" ":set index_format = \"%S%T %[%d/%b] %-12.12L (%4l) %s\"<Enter>:set date_format = \"%d/%b\"<Enter>"
macro pager "\Cn" ":set index_format = \"%S%T %[%d/%b] %-12.12L (%4l) %s\"<Enter>:set date_format = \"%d/%b\"<Enter><refresh>"
# Show email address (who)
macro index "\Cw" ":set date_format = \"%a d/%b %r\"<Enter>:set index_format = \"%S%T %[%d/%b] %-25.25a %-20.20t (%4l) %s\"<Enter>"
macro pager "\Cw" ":set date_format = \"%a d/%b %r\"<Enter>:set index_format = \"%S%T %[%d/%b] %-25.25a %-20.20t (%4l) %s\"<Enter><refresh>"
# macro index "\Cw" ":set date_format = \"%a d/%b %r\"<Enter>:set index_format = \"%S%T %[%D] %-25.25a %-20.20t (%4l) %s\"<Enter>"
# macro pager "\Cw" ":set date_format = \"%a d/%b %r\"<Enter>:set index_format = \"%S%T %[%D] %-25.25a %-20.20t (%4l) %s\"<Enter><refresh>"
## Index:
# macro index <left> <change-folder>"?"
macro index <left> <change-folder>"?"Od
macro index <right> <display-message>
## Pager:
# macro pager "\Ci" ":set pager_index_lines = 0<Enter>"
macro pager "\Ci" ":set pager_index_lines = 4<Enter>"
macro pager "\Co" ":set pager_index_lines = 20<Enter>"
macro pager <left> <exit>
macro pager <up> <previous-entry>
macro pager <down> <next-entry>
macro pager <pageup> <half-up>
macro pager <pagedown> <half-down>
macro pager "u" <half-up>
# Actually best left as default up one line, which matches <return> =)
# macro pager <backspace> <half-up>
macro pager <space> <half-down>
macro pager <right> <view-attachments>

## Generic:
# macro generic ":0<Return>" <first-entry>
# macro generic ":$<Return>" <last-entry>
## and because ? was help...
macro generic \\H <help>
macro generic \\h <help>
macro generic \CH <help>
macro generic \Ch <help>
macro generic <Esc>h <help>
macro generic <f1> <help>
## Musn't use this, because it disables all ":command" keymappings!
# macro generic ":h" <help>
##
## Already defaults:
# macro generic "/" <search>
# macro generic "n" <search-next>
## When reading message, still perform search in index
macro pager "n" i<search-next><Enter>

## still doesn't get it working on the search screen:
## in fact breaks index re-search!
# macro generic "n" i<search-next><Enter>

macro generic "?" <search-reverse>
macro browser "N" <search-opposite>
macro index "N" <search-opposite>
# macro pager "N" <search-opposite>
macro pager "N" i<search-opposite><Enter>
### don't work:
# macro generic "\Cy" <decrypt-copy>
# macro generic "\Cy" <decrypt-save>

### Spamassasin:
## Fully assess email:
macro index "X?" "| spamassassin -D -t"
# | fromline '^---- Start Spam' | toline '^---- End of Spam' | highlight '.*points.*required' <Enter>"
macro pager "X?" "| spamassassin -D -t"
# | fromline '^---- Start Spam' | toline '^---- End of Spam' | highlight '.*points.*required' <Enter>"
# | grep \^SPAM | highlight '\(.*hits.*required\)' &<Enter>"
## Quickly assess email (do not use network resources, eg. razor):
macro index "XL" "| spamassassin -D -t -L"
# | fromline '^---- Start Spam' | highlight '.*points.*required' <Enter>"
macro pager "XL" "| spamassassin -D -t -L"
# | fromline '^---- Start Spam' | highlight '.*points.*required' <Enter>"
## Report spam to spamassassin, and delete:
# macro index "XS" "| spamassassin -r & <Enter>d"
# macro pager "XS" "| spamassassin -r & <Enter>d"
## Report spam to spamassassin, and move:
macro index "XS" "| spamassassin -D -r<Enter>s~/Mail/spam_reported<Enter>y"
macro pager "XS" "| spamassassin -D -r<Enter>s~/Mail/spam_reported<Enter>y"
## Quickly learn spam:  (perform "sa-learn --sync" after batch)
macro index "XX" "| sa-learn -D --spam --no-sync<Enter>s~/Mail/spam_reported<Enter>y"
macro pager "XX" "| sa-learn -D --spam --no-sync<Enter>s~/Mail/spam_reported<Enter>y"
## Quickly lean ham:  (perform "sa-learn --sync" after batch)
# macro index "XH" "| sa-learn --ham --no-sync<Enter><Down>"
# macro pager "XH" "| sa-learn --ham --no-sync<Enter><Down>"
macro index "XH" "| spamassassin -D -k<Enter><Down>"
macro pager "XH" "| spamassassin -D -k<Enter><Down>"
## Razor direct:
# macro index "XX" "| razor-report & <Enter>d"
# macro pager "XX" "| razor-report & <Enter>d"
# macro index "XX" "| razor-report & <Enter>s~/Mail/spam_reported<Enter>y"
# macro pager "XX" "| razor-report & <Enter>s~/Mail/spam_reported<Enter>y"

## Addresbook / aliases:
# source ~/.mail_aliases
# set alias_file=~/.mail_aliases
# set query_command="abook --mutt-query '%s'" noconfirmappend
## Run addressbook:
macro index \A "!abook\n" "Abook"
macro pager \A "!abook\n" "Abook"
## Edit the email aliases in special file:
macro index \ea "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n" "Edit aliases file and reload it"
macro pager \ea "!$EDITOR ~/.mutt/aliases\n:source ~/.mutt/aliases\n" "Edit aliases file and reload it"

## Read HTML attachment:
macro index H "v|striphtml|less<Enter>q"
macro pager H "v|striphtml|less<Enter>q"

# set alias_file = "$HOME/addressbook/aliases.mutt"
