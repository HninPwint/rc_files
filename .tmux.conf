# vim: foldmethod=marker

# The following come from https://github.com/tony/tmux-config/blob/master/.tmux.conf {{{

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf

# When we don't have 256 colors:
set-option -g status-bg blue
set-option -g status-fg colour136
set-option -g status-attr default
set-window-option -g window-status-fg black
set-window-option -g window-status-bg white
#set-window-option -g window-status-attr dim

# When we do have 256 colors:
set-option -g status-bg colour235
set-option -g status-fg colour136
set-option -g status-attr default
set-window-option -g window-status-fg colour248
set-window-option -g window-status-bg colour237

## None of this block works for me!
# Bell notification
#set window-status-bell-attr bright
#set window-status-bell-bg green
#set window-status-bell-fg white
# Content notification
#set window-status-content-attr bright
#set window-status-content-fg colour208
#set window-status-content-bg colour237
set-window-option -g window-status-content-fg colour208
set-window-option -g window-status-content-bg colour237
# Activity notification
#set window-status-activity-attr bright
set window-status-activity-bg colour237
set window-status-activity-fg colour208

# set window split
bind-key v split-window -h
bind-key b split-window

# active window title colors
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 15
set -g status-right-length 140
set -g status-left '#[fg=cyan,bg=blue,bright]#H#[fg=white]v#[fg=cyan,bright]#(uname -r | sed "s|-.*||") #[default]'
set -g status-right '#[fg=white,bg=blue] #(sed "s+ .*++" /proc/loadavg) #(get_cpu_temperature)^ #[fg=cyan]#(get_power_stats -mini) #[fg=blue,bright]%a %e %b'
# #(tmux-mem-cpu-load -i 1)
# #(cpufreq-info -f | sed "s+...$++")
# #(cat /proc/loadavg | takecols 1 | sed "s+\\.++;s+^0*++")%%

set-option -g set-titles on
set-option -g set-titles-string '[tmux] #T:#S #W' # user@host, session name, current window name

# C-b is not acceptable -- Vim uses it
#set-option -g prefix C-a
#bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
set -g mode-mouse off

# color
# This sets the value of $TERM, but in xterm tmux still has 16 colours.
# To get 256 colours in xterm, I had to do `TERM=screen-256color tmux`, and this didn't matter.
set -g default-terminal "screen-256color"

# status bar
set-option -g status-utf8 on

# https://github.com/edkolev/dots/blob/master/tmux.conf
# Updates for tmux 1.9's current pane splitting paths.
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind s; bind s split-window -v -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "[[ `tmux -V` == *1.9* ]]" 'unbind %; bind % split-window -h -c "#{pane_current_path}"'

# }}}



# From https://justin.abrah.ms/dotfiles/tmux.html {{{

setw -g mode-mouse on
set-option -g mouse-select-pane on

set-option -g bell-action none
set-option -g visual-bell on

# Change the prefix key to Ctrl-z
# Use Ctrl-z Ctrl-z to send the Ctrl-z prefix to an inner tmux.
set-option -g prefix C-z
unbind-key C-b
bind-key C-z send-prefix

# First windows is 1 (not the default 0)
set -g base-index 1

set -g history-limit 10000

bind-key r source-file ~/.tmux.conf
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"
bind-key | split-window -h
bind-key - split-window -v

# }}}



# Added by Joey {{{

# I used to use these in screen, but I find myself wanting Ctrl-O too often in Vim.
#bind-key -n C-O select-window -t -1
#bind-key -n C-P select-window -t +1
# These did not work:
#bind-key -n C-S-O select-window -t -1
#bind-key -n C-S-P select-window -t +1
# These are nice for gnome-terminal, but don't work on xterm!
bind-key -n M-C-O select-window -t -1
bind-key -n M-C-P select-window -t +1
# Not recommended: C-[ interferes with <Esc>
# Like Mac.  Would be good except I made Fluxbox intercept them!
bind-key -n M-S-[ select-window -t -1
bind-key -n M-S-] select-window -t +1
#bind-key -n C-[ select-window -t -1
#bind-key -n C-] select-window -t +1
#bind-key -n C-S-Left swap-window -t -1
#bind-key -n C-S-Right swap-window -t +1
bind-key -n C-S-Left select-window -t -1
bind-key -n C-S-Right select-window -t +1
bind-key -n C-S-up swap-window -t -1
bind-key -n C-S-down swap-window -t +1
# Some terminals (KTerm?) use this for switching tabs:
bind-key -n S-Left select-window -t -1
bind-key -n S-Right select-window -t +1
# These would be nice, but [ is the key to enter copy mode.
#bind-key [ select-window -t -1
#bind-key ] select-window -t +1
bind-key -n F8 select-window -t -1
bind-key -n F9 select-window -t +1
# C-, and C-. did not work
# S-Tab and C-Tab did not work
bind-key Tab last-window
#bind-key Tab select-window -l

# }}}



# Notes
# http://mutelight.org/practical-tmux has a tip on how to share a session with someone else, but not be forced to view the same window at all times.
