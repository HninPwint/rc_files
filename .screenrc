### Joey's screen config

# By default screen uses ^a (Ctrl-A) as its meta key, but I like to keep ^a
# free for its shell usage (beginning-of-line), so I use the meta key ^k
# (Ctrl-K) instead.  This is hardwired into many of the bindings below.

## Dotted around jsh are screentitle calls to describe the state of each window:
# shell in dir	directory/
# shell running command	#command
# editing file	{filename}   (poorly supported, only with 'edit')
# man page	"page"       (with 'jman')
# shell on remote machine	(hostname)
# another screen	[host:screenname]
## Do we want state too or is that too bloated? ^ here
## I believe support for those not mentioned is in jsh startup: xttitleprompt

maptimeout 800

# caption always "%{BW} %H %{bw}%-w%{gK}%n %t%{bw}%+w%78=%{BW} %M %d %y %93=%c%="
# hardstatus alwayslastline "%{BW}www.guckes.net/screen/%50=%{RY}host: %H %85=%{YR}%M%d %92=%{Gb}%c%="
# caption always "%{kG}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{kG}%?%+Lw%?"
# caption always "%{bw}%?%-Lw%?%{Gk}[%n] %f %t%?(%u)%?%{bw}%?%+Lw%?"
# caption always "%{bw}%-Lw%{kw} %{Gk} [%n] %f %t(%u) %{kw} %{bw}%+Lw%{kw} %65=%{bW} %H %{bw}%75=%M%d %85=%c%="
# caption always "%{bw}%-Lw%{kw} %{Gk} [%n] %f %t(%u) %{kw} %{bw}%+Lw%{kw} %65=%{bW} %H %{bw}%75=%M%d %85=%c%="
# caption always "%{BW} %H %{bw} %-w%{kw} %{gk} >%n< %t %{kw} %{bw}%+w %81=%{BW} %M %d %92=%c%="
# caption always "%{BW} %H: $SCREENNAME %{bw} %-w%{kw} %{gk} >%n< %t %{kw} %{bw}%+w %=%{BW} %M %d %c"
caption always "%{BW}[%{BC}%H%{BW}:%{BC}$SCREENNAME%{BW}] %{bw} %-w%{kw} %{gk} %n %t %{kw} %{bw}%+w %=%{BW} %M %d %c"

# sorendition    kG # black  on bold green
# sorendition 00 57 # white on magenta
sorendition 00 mW # white on magenta

activity              "%C -> %n%f %t activity!"

## Joey disabled this to test whether it is the cause of slow unswapping when screen is resized, or not.
# defscrollback 10000

## My prefered default command keys:
## bigscreen was having trouble overriding these so they are disabled here (can be set at invokation or during runtime).
defescape "^k^l"
escape "^k^l"

## PgUp and PgDn keys enter copy/scrollback mode
# bindkey -k kP copy
## Home key kH enters copy/scrollback mode UNTESTED (ho?)
# bindkey -k ho copy ## not recognised!
## Strangely kH works on End not Home!
bindkey -k kH copy
## Now I'm binding it to the Insert key:
bindkey -k kI copy
## Shift-Home key enters copy/scrollback mode UNTESTED
# bindkey -k #2 copy

## Ctrl+X opens a new window
# bindkey "^x" screen

## Ctrl+N opens a new window
bindkey "^n" screen
## Trying to split and open new window:
# bindkey "^v" stuff "^kS^kc"

### Window switching

  ## F8 and F9 or Crl+O and Ctrl+P cycle backwards/forwards through window list
  bindkey -k k8 prev
  bindkey -k k9 next
  bindkey "^o" prev
  bindkey "^p" next
  ## I changed those commands to keystrokes so that we can make a screen with this config but a different key, allowing these commands throgh (making the alternative key screen transparent)
  ## I don't understand: these don't appear to work.  Did they ever work?!
  # bindkey -k k8 stuff "^kp"
  # bindkey -k k9 stuff "^kn"
  # bindkey "^o" stuff "^kp"
  # # bindkey "^p" stuff "^kn"
  ## worked for Ctrl+] and [, but also broke <up> and <down> arrows.
  # bindkey "\033" prev
  # bindkey "\035" next
  ## couldn't get Ctrl+< and > working at all, cos I couldn't get vim's Ctrl+V to accept them as a code.

  ## Provided all your screens use commandkeys (-e) ^k^l, we can cycle nested
  ## screens too.
  ## F6 and F7 cycle on inner screen
  bindkey -k k6 stuff "^k^l^kp"
  bindkey -k k7 stuff "^k^l^kn"
  ## Ctrl+N and Ctrl+@ too
  # bindkey "^n" stuff "^k^lp"
  # bindkey "^G" stuff "^k^ln"

  ## F4 and F5 cycle on second nested screen
  bindkey -k k4 stuff "^k^lp"
  bindkey -k k5 stuff "^k^ln"

  ## Ctrl+J moves between split windows: (default is Special -> Tab)
  bindkey "^h" resize +1
  bindkey "^j" focus

## Move windows with Ctrl+W followed by target number

  bindkey "^w0" number 0
  bindkey "^w1" number 1
  bindkey "^w2" number 2
  bindkey "^w3" number 3
  bindkey "^w4" number 4
  bindkey "^w5" number 5
  bindkey "^w6" number 6
  bindkey "^w7" number 7
  bindkey "^w8" number 8
  bindkey "^w9" number 9

## Or with Ctrl+M

  bindkey "^m0" number 0
  bindkey "^m1" number 1
  bindkey "^m2" number 2
  bindkey "^m3" number 3
  bindkey "^m4" number 4
  bindkey "^m5" number 5
  bindkey "^m6" number 6
  bindkey "^m7" number 7
  bindkey "^m8" number 8
  bindkey "^m9" number 9



### Window splitting and split navigation

## Split windows (default ^kS):
# bindkey "^kS" split

## Unsplit windows:
# bindkey "^kU" only
bindkey "^kU" remove
bindkey "^kc" remove

## Switch through windows.
## screen only allows this in one direction, but I expect two directions, so I
## bind two keys even though they both move in the same direction (forwards).
## Default: bindkey "^k<Tab>" focus
## Ctrl-K j to switch through splits
bindkey "^kj" focus
bindkey "^kk" focus
## Ctrl-Up/Down to switch through splits
#bindkey "[1;5B" focus
#bindkey "[1;5A" focus
## Ctrl-K Up/Down to switch through splits
bindkey "^kOA" focus
bindkey "^kOB" focus
## Ctrl-K Ctrl-Up/Down to switch through splits
#bindkey "^k[1;5B" focus
#bindkey "^k[1;5A" focus

## Like Vim:  (might get annoying if I'm using vim!)
## Why didn't I also add "^wj"?
bindkey "^wk" focus


