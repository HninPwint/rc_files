# .gitconfig



# Essential to avoid warnings
[user]
	name = Paul Clark
	email = joey@neuralyte.org



# Many of the following come from http://cheat.errtheblog.com/s/git

# Add colors
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan



# Highlight whitespace in diffs
[color]
	ui = true
[color "diff"]
	whitespace = blue reverse
[core]
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = /home/joey/linux/.gitignore



# Aliases
[alias]
	st = status
	ci = commit
	br = branch
	co = checkout
	df = diff
	dc = diff --cached
	lg = log -p
	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	ls = ls-files
	# Show files ignored by git:
	ign = ls-files -o -i --exclude-standard

	# Joey's:
	## Just a list of the files that have changed on the origin (I hope)
	# newfiles = ls-files -u
	# newfiles = diff-files --stat
	## This shows change-counts in local files (and perhaps also what is new on the origin)
	whatsnew = diff-index --color --stat origin
	## This shows only what is new on the origin (log and diffs!)
	## BUT ofc it only works after git fetch!
	preview  = log -p HEAD..origin
	# preview  = diff -p HEAD..origin



### The following options are rather more serious, because they affect how git modifies files.



# % git config core.autocrlf true
#
# autocrlf setting tells git to convert the newlines to the system's standard
# when checking out files, and to LF newlines when committing in
#
# I have this disabled for now, concerned about Beeb lookup tables and other binaries.
# [core]
	# autocrlf=true



# % git config branch.autosetupmerge true
#
# tells git-branch and git-checkout to setup new branches so that git-pull(1)
# will appropriately merge from that remote branch.  Recommended.  Without this,
# you will have to add --track to your branch command or manually merge remote
# tracking branches with "fetch" and then "merge".
[branch]
	autosetupmerge = true



# % git config apply.whitespace nowarn
#
# To ignore whitespace
#
# I have this disabled because I use coffeescript, and in general I like
# whitespace to be meaningful!
#
# [apply]
	# whitespace = nowarn



