# TODO: Turn these into shellscripts so they are available from vim's command line.
#       Put them somewhere and load them onto the PATH optionally.  (Not everyone will want them.)

#alias gs='git status'
#alias gs='gitstatus'
#alias gs='if [ -t 1 ]; then gitstatus | more; else git status; fi'
#gs() {
#	if [ -t 1 ]
#	then gitstatus "$@" | more
#	else git status "$@"
#	fi
#}
gs() {
	if [ -t 1 ]
	then git -c color.status=always status "$@" | less -R +'/^# [^ ].*'
	else git status "$@"
	fi
}

#alias gd='git diff'
gd() {
	if [ -t 1 ]
	then git -c color.diff=always diff "$@" | less -R +'/^diff.*'
	else git diff "$@"
	fi
}
alias gdw='git diff --word-diff'

alias ga='git add'
alias gc='git commit'
alias gf='git fetch'
alias gp='git preview'
alias gw='git whatsnew'
alias gm='git merge FETCH_HEAD'

#alias gl='git log'
#alias gl='git log -U2 -p -m'
# I thought it might be nice to setup less so that we can jump to the next commit with 'n'
# Unfortunately whilst this provides the feature, git disables colors:
#   gl | less +"/^commit.*" -r
# Oh, fixed it.  Since this make paging commits very fast, now adding --stat
#alias gl='git -c color.ui=always log -U2 -p -m --stat | less -R "+/^commit.*"'
gl() {
	if [ -t 1 ]
	then git -c color.ui=always log -U2 -p -m --stat "$@" | less -R +'/^(commit|diff).*'
	else git log -U2 -p -m --stat "$@"
	fi
}
# It is debatable whether we want to page through diffs or just whole commits; it kinda depends what the user is looking for that particular time!
alias glw='gl --word-diff'
alias glf='git log --stat'

alias gb='git branch'
alias gco='git checkout'
alias gi='git commit --interactive'

# Git auto commit OR Git-add-commit
gac() {
	git add "$@"
	echo -n "Commit message: "
	read msg
	git commit -m "$msg"
}

